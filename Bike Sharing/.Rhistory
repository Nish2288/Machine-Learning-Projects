print("Hello World")
print("Hello world")
print('Hello world')
source('~/.active-rstudio-document', echo=TRUE)
help()
?print
help(rnorm)
help(rnorm)
example(rnorm)
demp()
demp()
dem0()
demo()
demo(package = 'graphics')
demo(graphics)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a <- 'nishant'
a <- 'nishant'
a
match.score <- 11
match.score
get(match.score,globalenv())
get("match.score",globalenv())
my.env <- new.env()
my.env$match.score <- 12
my.env$match.score
get("match.score",my.env)
2+3
x <- 3
y <- 4
x + y
10*2
10/2
10^5
format(10^5)
format(10^5,scientific = FALSE)
10**5
format(10**5,scientific = false)
format(10**5,scientific = FALSE)
10/3
10%3
10%%3
10%/3%
10%/%3
10 %/% 3
pi
options()
1/0
null
is.finite(1/0)
------------------------------------------------------
student.marks <- c(10,20,30)
------------------------------------------------------
student.marks <- c(10,20,30)
student.marks
student.marks <- c(10,20,30)
student.marks
mean(student.marks)
student.marks <- student.marks + 5
student.marks
student.marks > 20
---------------------------------------------------------
students.marks <- (30,40,50)
---------------------------------------------------------
students.marks <- (30,40,50)
---------------------------------------------------------
students.marks <- c(30,40,50)
students.marks
students.marks <- c(30,40,50)
students.marks
str(students.marks)
is.numeric(students.marks)
---------------------------------------
student.names <- c("nish","harshal","amit")
student.names <- c("nish","harshal","amit")
student.names
student.names[1]
student.names[1:3]
student.names[3:1]
student.names[1][2]
student.names[1][1]
student.names[0]
student.names[c(T,F,F)]
student.names[student.marks>40]
students.names[student.marks>40]
student.marks>40
as.numeric(student.marks>40)
dataset=read.csv('Salary_Data.csv')
str(bike)
str(bike)
bike<-rbind(train_bike,test_bike)
library(ggplot2)
library(dplyr)
#Read files
train_bike<-read.csv('train.csv')
test_bike<-read.csv('test.csv')
"Number of column should be same in train and test. Our target is to find total count which is registered+casual.
So we can build Model to find count directly insted of finding registered+casual."
#Remove registered cand causal from training set and then Add count column in test and combine both dataset.
test_bike$count<NA
train_bike<-select(train_bike,-registered,-casual)
bike<-rbind(train_bike,test_bike)
train_bike<-read.csv('train.csv')
setwd("C:/Users/nwelpulw/Desktop/Udemy/Projects/Bike Sharing")
library(ggplot2)
library(dplyr)
#Read files
train_bike<-read.csv('train.csv')
test_bike<-read.csv('test.csv')
"Number of column should be same in train and test. Our target is to find total count which is registered+casual.
So we can build Model to find count directly insted of finding registered+casual."
#Remove registered cand causal from training set and then Add count column in test and combine both dataset.
test_bike$count<NA
train_bike<-select(train_bike,-registered,-casual)
bike<-rbind(train_bike,test_bike)
train_bike<-read.csv('train.csv')
test_bike<-read.csv('test.csv')
test_bike$count<-NA
test_bike$count
train_bike<-select(train_bike,-registered,-casual)
bike<-rbind(train_bike,test_bike)
str(bike)
head(bike)
class(bike$datetime)
bike$datetime<-as.POSIXct(bike$datetime)
class(bike$datetime)
ggplot(bike,aes(datetime,count)+geom_point()
ggplot(bike,aes(datetime,count)+geom_point()
ggplot(bike,aes(datetime,count))+geom_point()
ggplot(bike,aes(datetime,count))+geom_point(color=temp)
View(bike)
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp))
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp))
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.3)
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.3)+scale_color_continuous(low = 'yellow',high = 'red')
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.3)+scale_color_continuous(low = 'yellow',high = 'red')
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.3)+scale_color_continuous(low = 'yellow',high = 'red')+theme_bw()
ggplot(bike,aes(datetime,count))+geom_point(aes(color=temp),alpha=0.3)+scale_color_continuous(low = 'yellow',high = 'red')+theme_bw()
head(bike)
bike$hour <-sapply(bike$datetime,function(x){format(x,"%H")})
bike$hour
ggplot(bike,aes(hour,count))+geom_point()
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp))
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0))
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0))+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.3)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(bike,aes(hour,count))+geom_point()
ggplot(bike,aes(hour,count))+geom_point()
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.3)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(bike,aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
bike$hour
class(bike$hour)
class(bike$hour)
bike$hour<-as.numeric(bike$hour)
class(bike$hour)
ggplot(filter(bike,workingday==1),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
bike$hour<-0
bike$daypart[bike$hour>=6 & bike$hour<=9]<-1
bike$daypart[bike$hour>=12 & bike$hour<=15]<-1
bike$daypart[bike$hour>=16 & bike$hour<=19]<-1
bike$daypart<-as.factor(bike$daypart)
ggplot(filter(bike,workingday==0),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
head(bike)
bike$daypart
bike$hour <-sapply(bike$datetime,function(x){format(x,"%H")})
ggplot(filter(bike,workingday==1),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
# Peak hour:6-9 ,12-15,16-19
class(bike$hour) #Character
bike$hour<-as.numeric(bike$hour)
bike$daypart<-0
bike$daypart[bike$hour>=6 & bike$hour<=9]<-1
bike$daypart[bike$hour>=12 & bike$hour<=15]<-1
bike$daypart[bike$hour>=16 & bike$hour<=19]<-1
bike$daypart<-as.factor(bike$daypart)
bike$daypart
ggplot(filter(bike,workingday==0),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(filter(bike,workingday==1),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(filter(bike,workingday==0),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
ggplot(filter(bike,workingday==0),aes(hour,count))+geom_point(aes(color=temp),position = position_jitter(width = 1,height = 0),alpha=0.5)+scale_color_gradientn(colours = c('dark blue','blue','light blue','light green','yellow','orange','red'))+theme_bw()
head(bike)
summary(bike)
str(bike)
weekday(as.date(bike$datetime))
weekdays(as.date(bike$datetime))
any(is.na(bike))
any(is.na(bike$datetime))
weekdays(as.Date(bike$datetime))
a<-weekdays(as.Date(bike$datetime))
head(a)
bike$weekday<-weekdays(as.Date(bike$datetime))
ggplot(bike,aes(weekday,count))+geom_point()
weekdays()
ggplot(bike,aes(weekday,count))+geom_bar()
ggplot(bike,aes(weekday,count))+geom_histogram()
ggplot(bike,aes(weekday,count))+geom_point()
ggplot(bike,aes(weekday,count))+geom_bar()
ggplot(bike,aes(weekday))+geom_bar()
ggplot(bike,aes(weekday,count))+geom_bar()
str(bike)
bike$season<-as.factor(bike$season)
bike$holiday<-as.factor(bike$holiday)
bike$season<-as.factor(bike$season)
ggplot(bike,aes(weather,count))+geom_bar()
ggplot(bike,aes(weather,count))+geom_point()
str(bike)
ggplot(bike,aes(temp,count))+geom_point()
ggplot(bike,aes(atemp,count))+geom_point()
ggplot(bike,aes(humidity,count))+geom_point()
ggplot(bike,aes(windspeed,count))+geom_point()
str(bike)
bike$season<-as.factor(bike$season)
bike$holiday<-as.factor(bike$holiday)
bike$workingday<-as.factor(bike$workingday)
bike$weather<-as.factor(bike$weather)
str(bike)
bike$hour<-as.factor(bike$hour)
test<-filter(bike,is.na(count))
head(test)
str(test)
str(test_bike)
train<-filter(bike,!is.na(count))
str(train)
